{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiffGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","TextField","id","label","variant","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GiffGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2NAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAe,MAKnB,UACI,wCACA,cAACO,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,oBAAoBC,QAAQ,WAAWC,MAAOZ,EAAYa,SAf7E,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,cAmB/Bf,EAAYkB,UAAY,CACpBjB,cAAekB,IAAUC,KAAKC,Y,qCC/BrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHrB,GAAIqB,EAAIrB,GACRsB,MAAOD,EAAIC,MACXT,IAAKQ,EAAIE,OAAOC,iBAAiBX,QAXtB,kBAeZM,GAfY,4CAAH,sDCEPM,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAGjC,OACI,sBAAKa,UAAU,OAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAErB,ECHuB,SAAEA,GAEzB,MAA0BrB,mBAAS,CAC/B4B,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAACnB,IAKGoB,EDpB0BK,CAAazB,GAAjCY,EAAb,EAAQL,KAAaY,EAArB,EAAqBA,QAGrB,OAEI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDf,EAArD,OAEEmB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIrB,aEevBqC,EA/BM,WAGjB,MAAoC/C,mBAAS,CAAC,gBAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAMA,OACI,gCACI,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQiD,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCpBjC4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.2e8141ec.chunk.js","sourcesContent":["import React, {useState}from 'react'\nimport TextField from '@mui/material/TextField';\nimport PropTypes from 'prop-types';\n\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);\n            setinputValue ('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Buscar</h2>\n            <TextField id=\"outlined-basic\" label=\"Ingresa categoria\" variant=\"outlined\" value={inputValue} onChange={handleInputChange}/>\n        </form>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=s7OO6F936xgSngjfMLFELJaFdo5ge7kl&q=${ encodeURI(category) }&limit=10`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n\n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GiffGridItem = ({title, url}) => {\n    \n\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGif } from '../hooks/useFetchGif';\nimport { GiffGridItem } from './GiffGridItem';\n\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGif( category );\n    \n\n    return (\n        \n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n        \n                {\n                    images.map( img => (\n                        <GiffGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n\n            </div>\n        </>\n            \n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGif = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nconst GitExpertApp = () => {\n\n    // const categories = ['Darth Vader', 'Mandalorian', 'Jedi'];\n    const [categories, setCategories] = useState(['Darth Vader']);\n\n    // const handleAdd = () =>{\n    //     setCategories([...categories, 'Game of thrones']);\n    // }\n\n    return (\n        <div>\n            <h2>Buscador de Gif</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            \n            {/* <button onClick={handleAdd}>Agregar</button> */}\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GitExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GitExpertApp from './GitExpertApp'\n\n\nReactDOM.render(\n  \n    <GitExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}